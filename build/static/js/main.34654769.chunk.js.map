{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/crud.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","react_default","a","createElement","onChange","handleSearchTermChange","value","searchTerm","PersonForm","onSubmit","addPerson","handleNameChange","newName","handleNumberChange","newNumber","type","Persons","persons","map","person","key","id","name","number","onClick","handleDelete","baseURL","crud","axios","get","then","response","data","newObject","post","delete","concat","status","Notification","_ref","message","className","content","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setSearchTerm","_useState9","_useState10","setMessage","useEffect","initialPersons","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","returnedPerson","toConsumableArray","setTimeout","catch","error","components_Persons","trim","filter","toLowerCase","includes","setPersonsToRender","window","confirm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.34654769.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = props => {\n  return (\n    <div>\n        filter shown with{' '}\n        <input onChange={props.handleSearchTermChange} value={props.searchTerm} />\n      </div>\n  )\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = props => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        name: <input onChange={props.handleNameChange} value={props.newName} />\n      </div>\n      <div>\n        number:{' '}\n        <input onChange={props.handleNumberChange} value={props.newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = props => {\n  return (\n    <div>\n      {props.persons.map(person => (\n        <div key={person.id}>\n          {person.name} {person.number}\n          <button onClick={() => props.handleDelete(person)}>delete</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseURL = '/api/persons';\n\nconst getAll = () => axios.get(baseURL).then(response => response.data);\n\nconst create = newObject =>\n  axios.post(baseURL, newObject).then(response => response.data);\n\nconst update = (id, newObject) =>\n  axios.put(`${baseURL}/${id}`, newObject).then(response => response.data);\n\nconst remove = id =>\n  axios.delete(`${baseURL}/${id}`).then(response => response.status);\n\nexport default { getAll, create, update, remove };\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={message.type}>{message.content}</div>;\n};\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport crud from './services/crud';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  // App states\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    crud.getAll().then(initialPersons => setPersons(initialPersons));\n  }, []);\n\n  // onChange event handlers\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  // Helper function\n  const setPersonsToRender = searchTerm => {\n    let showFilteredPersons = null;\n    if (searchTerm.trim()) {\n      showFilteredPersons = persons.filter(person =>\n        person.name.toLowerCase().includes(searchTerm.trim().toLowerCase())\n      );\n    } else {\n      showFilteredPersons = persons;\n    }\n    return showFilteredPersons;\n  };\n\n  // onSubmit event handler\n  const addPerson = event => {\n    event.preventDefault();\n    // //validation\n    // if (!newName.trim() || !newNumber.trim()) {\n    //   alert('name and number fields cannot be empty');\n    //   return;\n    // }\n    // const isDuplicateName = persons.some(\n    //   person => person.name === newName.trim()\n    // );\n    // const isDuplicateNumber = persons.some(\n    //   person => person.number === newNumber.trim()\n    // );\n    // if (isDuplicateName) {\n    //   const userResponse = window.confirm(\n    //     `${newName} is already added to phonebook, replace old number with new number?`\n    //   );\n    //   if (userResponse) {\n    //     const newPerson = { name: newName, number: newNumber };\n    //     const { id } = persons.find(person => person.name === newName);\n    //     crud\n    //       .update(id, newPerson)\n    //       .then(returnedPerson => {\n    //         setPersons(\n    //           persons.map(person =>\n    //             person.name !== newName ? person : returnedPerson\n    //           )\n    //         );\n    //       })\n    //       .catch(error => {\n    //         console.log(error);\n\n    //         setMessage({\n    //           content: `Information of ${newName} has already been removed from the server`,\n    //           type: 'failure'\n    //         });\n    //         setTimeout(() => {\n    //           setMessage(null);\n    //         }, 3000);\n    //       });\n    //   }\n    // } else if (isDuplicateNumber) {\n    //   alert(`${newNumber} is already added to phonebook`);\n    // }\n\n    const newPerson = { name: newName, number: newNumber };\n    crud\n      .create(newPerson)\n      .then(returnedPerson => {\n        setMessage({\n          content: `Added ${returnedPerson.name}`,\n          type: 'success'\n        });\n        setPersons([...persons, returnedPerson]);\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n      })\n      .catch(error => {\n        setMessage({\n          content: error.response.data,\n          type: 'failure'\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 3000);\n      });\n\n    setNewName('');\n    setNewNumber('');\n    setSearchTerm('');\n  };\n\n  const handleDelete = ({ id, name }) => {\n    const userResponse = window.confirm(`Delete ${name}?`);\n    if (userResponse) {\n      crud.remove(id).then(status => {\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter\n        handleSearchTermChange={handleSearchTermChange}\n        searchTerm={searchTerm}\n      />\n      <h2>add a new contact</h2>\n      <PersonForm\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={searchTerm ? setPersonsToRender(searchTerm) : persons}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}